<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Oakestra</title>
        <link>https://oakestra.io/</link>
        <description>Recent content on Oakestra</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Wed, 10 Aug 2022 11:28:03 +0200</lastBuildDate><atom:link href="https://oakestra.io/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Contacts</title>
        <link>https://oakestra.io/about/contacts/</link>
        <pubDate>Wed, 10 Aug 2022 11:28:03 +0200</pubDate>
        
        <guid>https://oakestra.io/about/contacts/</guid>
        <description>&lt;h2 id=&#34;our-discussion-group&#34;&gt;Our discussion group&lt;/h2&gt;
&lt;p&gt;Join our github discussion group &lt;a class=&#34;link&#34; href=&#34;https://github.com/oakestra/oakestra/discussions&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;HERE&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Feel free to post questions and ideas or ask about any problem you have.&lt;/p&gt;
&lt;p&gt;In our team section, you can also find a list of people you can contact directly by email, socials, and, why not, carrier pigeons as well.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Team</title>
        <link>https://oakestra.io/about/team/</link>
        <pubDate>Wed, 10 Aug 2022 11:27:56 +0200</pubDate>
        
        <guid>https://oakestra.io/about/team/</guid>
        <description>&lt;ul&gt;
&lt;li&gt;Giovanni Bartolomeo
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;mailto:giovanni.bartolomeo@tum.de&#34; &gt;giovanni.bartolomeo@tum.de&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Mehdi Yosofie&lt;/li&gt;
&lt;li&gt;Oliver Haluszczynsci&lt;/li&gt;
&lt;li&gt;Simon Bäurle&lt;/li&gt;
&lt;li&gt;Maximilian Eder&lt;/li&gt;
&lt;li&gt;Patrick Sabanic&lt;/li&gt;
&lt;li&gt;Sonia Klärmann&lt;/li&gt;
&lt;li&gt;Ralf Baun&lt;/li&gt;
&lt;li&gt;Daniel Mair&lt;/li&gt;
&lt;li&gt;Maria Vienalas&lt;/li&gt;
&lt;li&gt;Dr. Nitinder Mohan
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;mailto:mohan@in.tum.de&#34; &gt;mohan@in.tum.de&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Prof. Jörg Ott&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Coding Style</title>
        <link>https://oakestra.io/docs/contribute/coding-style/</link>
        <pubDate>Tue, 09 Aug 2022 15:56:27 +0200</pubDate>
        
        <guid>https://oakestra.io/docs/contribute/coding-style/</guid>
        <description>&lt;h1 id=&#34;general-rules&#34;&gt;General rules&lt;/h1&gt;
&lt;h1 id=&#34;golang-style&#34;&gt;Golang style&lt;/h1&gt;
&lt;h1 id=&#34;python-style&#34;&gt;Python style&lt;/h1&gt;
&lt;h1 id=&#34;typescript-style&#34;&gt;TypeScript style&lt;/h1&gt;
</description>
        </item>
        <item>
        <title>Contributor Covenant Code of Conduct</title>
        <link>https://oakestra.io/docs/contribute/coc/</link>
        <pubDate>Tue, 09 Aug 2022 15:56:27 +0200</pubDate>
        
        <guid>https://oakestra.io/docs/contribute/coc/</guid>
        <description>&lt;h1 id=&#34;contributor-covenant-code-of-conduct&#34;&gt;Contributor Covenant Code of Conduct&lt;/h1&gt;
&lt;h2 id=&#34;our-pledge&#34;&gt;Our Pledge&lt;/h2&gt;
&lt;p&gt;In the interest of fostering an open and welcoming environment, we as
contributors and maintainers pledge to make participation in our project and
our community a harassment-free experience for everyone, regardless of age, body
size, disability, ethnicity, sex characteristics, gender identity and expression,
level of experience, education, socio-economic status, nationality, personal
appearance, race, religion, or sexual identity and orientation.&lt;/p&gt;
&lt;h2 id=&#34;our-standards&#34;&gt;Our Standards&lt;/h2&gt;
&lt;p&gt;Examples of behavior that contributes to creating a positive environment
include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Using welcoming and inclusive language&lt;/li&gt;
&lt;li&gt;Being respectful of differing viewpoints and experiences&lt;/li&gt;
&lt;li&gt;Gracefully accepting constructive criticism&lt;/li&gt;
&lt;li&gt;Focusing on what is best for the community&lt;/li&gt;
&lt;li&gt;Showing empathy towards other community members&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Examples of unacceptable behavior by participants include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The use of sexualized language or imagery and unwelcome sexual attention or
advances&lt;/li&gt;
&lt;li&gt;Trolling, insulting/derogatory comments, and personal or political attacks&lt;/li&gt;
&lt;li&gt;Public or private harassment&lt;/li&gt;
&lt;li&gt;Publishing others&amp;rsquo; private information, such as a physical or electronic
address, without explicit permission&lt;/li&gt;
&lt;li&gt;Other conduct which could reasonably be considered inappropriate in a
professional setting&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;our-responsibilities&#34;&gt;Our Responsibilities&lt;/h2&gt;
&lt;p&gt;Project maintainers are responsible for clarifying the standards of acceptable
behavior and are expected to take appropriate and fair corrective action in
response to any instances of unacceptable behavior.&lt;/p&gt;
&lt;p&gt;Project maintainers have the right and responsibility to remove, edit, or
reject comments, commits, code, wiki edits, issues, and other contributions
that are not aligned to this Code of Conduct, or to ban temporarily or
permanently any contributor for other behaviors that they deem inappropriate,
threatening, offensive, or harmful.&lt;/p&gt;
&lt;h2 id=&#34;scope&#34;&gt;Scope&lt;/h2&gt;
&lt;p&gt;This Code of Conduct applies within all project spaces, and it also applies when
an individual is representing the project or its community in public spaces.
Examples of representing a project or community include using an official
project e-mail address, posting via an official social media account, or acting
as an appointed representative at an online or offline event. Representation of
a project may be further defined and clarified by project maintainers.&lt;/p&gt;
&lt;h2 id=&#34;enforcement&#34;&gt;Enforcement&lt;/h2&gt;
&lt;p&gt;Instances of abusive, harassing, or otherwise unacceptable behavior may be
reported by contacting the project team at [INSERT EMAIL ADDRESS]. All
complaints will be reviewed and investigated and will result in a response that
is deemed necessary and appropriate to the circumstances. The project team is
obligated to maintain confidentiality with regard to the reporter of an incident.
Further details of specific enforcement policies may be posted separately.&lt;/p&gt;
&lt;p&gt;Project maintainers who do not follow or enforce the Code of Conduct in good
faith may face temporary or permanent repercussions as determined by other
members of the project&amp;rsquo;s leadership.&lt;/p&gt;
&lt;h2 id=&#34;attribution&#34;&gt;Attribution&lt;/h2&gt;
&lt;p&gt;This Code of Conduct is adapted from the &lt;a class=&#34;link&#34; href=&#34;https://www.contributor-covenant.org&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Contributor Covenant&lt;/a&gt;, version 1.4,
available at &lt;a class=&#34;link&#34; href=&#34;https://www.contributor-covenant.org/version/1/4/code-of-conduct.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.contributor-covenant.org/version/1/4/code-of-conduct.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For answers to common questions about this code of conduct, see
&lt;a class=&#34;link&#34; href=&#34;https://www.contributor-covenant.org/faq&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.contributor-covenant.org/faq&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Deploy your first application</title>
        <link>https://oakestra.io/docs/operations/application-deployment/</link>
        <pubDate>Tue, 09 Aug 2022 15:56:27 +0200</pubDate>
        
        <guid>https://oakestra.io/docs/operations/application-deployment/</guid>
        <description>&lt;h1 id=&#34;documentation-available-soon-stay-tuned&#34;&gt;Documentation available soon. Stay tuned.&lt;/h1&gt;
</description>
        </item>
        <item>
        <title>Features</title>
        <link>https://oakestra.io/docs/guicli/frontend/user/features/</link>
        <pubDate>Tue, 09 Aug 2022 15:56:27 +0200</pubDate>
        
        <guid>https://oakestra.io/docs/guicli/frontend/user/features/</guid>
        <description>&lt;h1 id=&#34;features&#34;&gt;Features&lt;/h1&gt;
&lt;p&gt;We have tried to build the dashboard as logically as possible.
Nevertheless, the most important functions of the dashboard are explained here.&lt;/p&gt;
&lt;p&gt;If you want to have a small overview of the dashboard just start a dashboard tour in the &lt;strong&gt;help section&lt;/strong&gt;.&lt;/p&gt;
&lt;h2 id=&#34;login&#34;&gt;Login&lt;/h2&gt;
&lt;p&gt;You can easily log in to the dashboard with your username and password. If you don&amp;rsquo;t have a user account yet, ask the admin to create one for you.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://oakestra.io/gifs/login.gif&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;gif-login&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;If you forgot your password you can reset it by clicking on the Forgot Password button, you will receive a mail with a link to create a new password.&lt;/p&gt;
&lt;h2 id=&#34;creating-an-application&#34;&gt;Creating an Application&lt;/h2&gt;
&lt;p&gt;To create a new application just click on the plus symbol in the application section on the left side.
Once you have pressed it, a dialog will open where you can specify the name, namespace and description of the application.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://oakestra.io/gifs/app.gif&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;gif-create-application&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;view-status-of-a-service&#34;&gt;View Status of a Service&lt;/h2&gt;
&lt;p&gt;To view the detailed status of a service and read out current data such as CPU and memory consumption, simply click on the status and a dialog opens with the corresponding values.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://oakestra.io/gifs/status.gif&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;gif-view-status&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;delete-user&#34;&gt;Delete User&lt;/h2&gt;
&lt;p&gt;To create, edit or delete a user you have to go to the user management page. This page can be found on the top right when you click on the people icon.&lt;/p&gt;
&lt;p&gt;In this example an existing user will be deleted.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://oakestra.io/gifs/delete.gif&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;gif-delete-user&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note that the user management page can only be accessed by an admin.&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;create-service&#34;&gt;Create Service&lt;/h3&gt;
&lt;p&gt;To create a new service we click on the &lt;code&gt;create service&lt;/code&gt; button.
We will be redirected to another page where many attributes can be defined.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://oakestra.io/gifs/service.gif&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;gif-add-service&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;In this example only a few attributes are given, in the following you will find a complete list of all attributes with a short description.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Work in progress. Add description of all attributes&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;create-connections-between-services&#34;&gt;Create connections between services&lt;/h2&gt;
&lt;p&gt;There are several ways to create a connection between two services.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A connection can be created in the previously shown input form.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A connection can also be created using the connection graph.
For this we connect two services simply by drag and drop.
A dialog will open where you can specify the requirements for the connection.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This gif shows the creation of a connection with the connection graph:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://oakestra.io/gifs/connection.gif&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;gif-add-connection&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;There are many more functions which are not described here.
In the future this page will be extended and more functions will be added.
If you still have difficulties with a function contact the EdgeIO team.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Front end access control</title>
        <link>https://oakestra.io/docs/guicli/frontend/user/access-control/</link>
        <pubDate>Tue, 09 Aug 2022 15:56:27 +0200</pubDate>
        
        <guid>https://oakestra.io/docs/guicli/frontend/user/access-control/</guid>
        <description>&lt;h1 id=&#34;access-control&#34;&gt;Access control&lt;/h1&gt;
&lt;p&gt;Once Dashboard is installed and accessible we can focus on configuring access control to the resources for users.&lt;/p&gt;
&lt;p&gt;When the framework is started for the first time, an admin user is automatically created.
This admin user can be used to create additional users.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;IMPORTANT:&lt;/strong&gt; Make sure that the Admin password is changed after the first start of the System Manager.&lt;/p&gt;
&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;EdgeIO supports currently only one way of authenticating and authorizing users.
Authorization is handled by the Root Orchestrator (System Manager) API server.
The Dashboard only acts as a proxy and passes all auth information to it.
In case of forbidden access corresponding warnings will be displayed in the Dashboard.&lt;/p&gt;
&lt;h2 id=&#34;authentication&#34;&gt;Authentication&lt;/h2&gt;
&lt;p&gt;EdgeIO Dashboard supports currently only this way of authenticating users:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Username/password&lt;/strong&gt; that can be used on Dashboard login view.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After a user is logged in, tokens in the authorization header are used to authenticate the user.&lt;/p&gt;
&lt;h3 id=&#34;authorization-header&#34;&gt;Authorization header&lt;/h3&gt;
&lt;p&gt;Using authorization header is the only way to make Dashboard act as a specific user.
Note that there are some risks if plain HTTP is used since the traffic is vulnerable to &lt;a class=&#34;link&#34; href=&#34;https://en.wikipedia.org/wiki/Man-in-the-middle_attack&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;MITM attacks&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To make Dashboard use authorization header you simply need to pass &lt;code&gt;Authorization: Bearer &amp;lt;token&amp;gt;&lt;/code&gt; in every request to Dashboard.
This is currently done automatically with an HTTP interceptor.&lt;/p&gt;
&lt;p&gt;To quickly test it check out &lt;a class=&#34;link&#34; href=&#34;https://chrome.google.com/webstore/detail/requestly-redirect-url-mo/mdnleldcmiljblolnjhpnblkcekpdkpa&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Requestly&lt;/a&gt; Chrome browser plugin that allows to manually modify request headers.&lt;/p&gt;
&lt;h2 id=&#34;admin-privileges&#34;&gt;Admin privileges&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;IMPORTANT:&lt;/strong&gt; Make sure that you know what you are doing before proceeding. Granting admin privileges to Dashboard&amp;rsquo;s Service Account might be a security risk.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Frontend</title>
        <link>https://oakestra.io/docs/guicli/frontend/frontend/</link>
        <pubDate>Tue, 09 Aug 2022 15:56:27 +0200</pubDate>
        
        <guid>https://oakestra.io/docs/guicli/frontend/frontend/</guid>
        <description>&lt;h1 id=&#34;user-guide&#34;&gt;User Guide&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;user/installation.md&#34; &gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;user/access-control.md&#34; &gt;Access control&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;user/features.md&#34; &gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;developer-guide&#34;&gt;Developer Guide&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;developer/getting-started.md&#34; &gt;Getting started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;developer/architecture.md&#34; &gt;Architecture&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Frontend architecture</title>
        <link>https://oakestra.io/docs/guicli/frontend/developer/architecture/</link>
        <pubDate>Tue, 09 Aug 2022 15:56:27 +0200</pubDate>
        
        <guid>https://oakestra.io/docs/guicli/frontend/developer/architecture/</guid>
        <description>&lt;h1 id=&#34;architecture&#34;&gt;Architecture&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;IMPORTANT:&lt;/strong&gt; It reflects only the structure as of the current version and may not reflect the structure of
future versions.&lt;/p&gt;
&lt;p&gt;EdgeIO Dashboard project consists of two main components. They are called here the
frontend and the backend.&lt;/p&gt;
&lt;p&gt;The frontend is a single page web application that runs in a browser. It fetches all its
business data from the backend using standard HTTP methods. It does not implement business logic,
it only presents fetched data and sends requests to the backend for actions.&lt;/p&gt;
&lt;p&gt;The backend is the extended version of the Root Orchestrator, especially the System Manager.
It can run anywhere as long the frontend can access the System Manager.
The figure below outlines the architecture of the project:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://oakestra.io/res/architecture.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Architecture Overview&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;backend&#34;&gt;Backend&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Written in &lt;a class=&#34;link&#34; href=&#34;https://www.python.org&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Python&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Code is stored in the &lt;code&gt;edgeio&lt;/code&gt; repository.
&lt;ul&gt;
&lt;li&gt;currently only the develop-frontend branch supports the user interface&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;frontend&#34;&gt;Frontend&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Written in &lt;a class=&#34;link&#34; href=&#34;https://www.typescriptlang.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;TypeScript&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Using &lt;a class=&#34;link&#34; href=&#34;https://angular.io/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Angular&lt;/a&gt; along with &lt;a class=&#34;link&#34; href=&#34;https://material.angular.io/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Angular Material&lt;/a&gt; for components like cards, buttons etc.&lt;/li&gt;
&lt;li&gt;Code is stored in &lt;code&gt;src/app/&lt;/code&gt; directory.&lt;/li&gt;
&lt;li&gt;Frontend makes calls to the API and renders received data. It also transforms some data on the client and provides visualizations for the user.&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Frontend isntallation</title>
        <link>https://oakestra.io/docs/guicli/frontend/user/installation/</link>
        <pubDate>Tue, 09 Aug 2022 15:56:27 +0200</pubDate>
        
        <guid>https://oakestra.io/docs/guicli/frontend/user/installation/</guid>
        <description>&lt;p&gt;#Installation&lt;/p&gt;
&lt;p&gt;The following folders/files are required to install and launch the dashboard.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;&#34; &gt;dist&lt;/a&gt; folder:  contains the build dashboard&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;&#34; &gt;docker&lt;/a&gt; folder: contains all the required files for the Docker&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;&#34; &gt;Dockerfile&lt;/a&gt;: configuration of the docker&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;&#34; &gt;docker-compose.yml&lt;/a&gt;: To start the docker and define the IP address of the System Manager&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Run &lt;code&gt;docker-compose up&lt;/code&gt; to start the Dashboard with docker compose.&lt;/p&gt;
&lt;p&gt;Now the dashboard is accessible on port 80.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Getting started with the frontend</title>
        <link>https://oakestra.io/docs/guicli/frontend/developer/getting-started/</link>
        <pubDate>Tue, 09 Aug 2022 15:56:27 +0200</pubDate>
        
        <guid>https://oakestra.io/docs/guicli/frontend/developer/getting-started/</guid>
        <description>&lt;h1 id=&#34;getting-started&#34;&gt;Getting started&lt;/h1&gt;
&lt;p&gt;This document describes how to setup your development environment.&lt;/p&gt;
&lt;h2 id=&#34;preparation&#34;&gt;Preparation&lt;/h2&gt;
&lt;p&gt;Make sure the following software is installed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Git 2.13.2+ (&lt;a class=&#34;link&#34; href=&#34;https://git-scm.com/downloads&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;installation manual&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Docker 1.13.1+ (&lt;a class=&#34;link&#34; href=&#34;https://docs.docker.com/engine/installation/linux/docker-ce/ubuntu/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;installation manual&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Node.js 16+ and npm 8+ (&lt;a class=&#34;link&#34; href=&#34;https://github.com/creationix/nvm#usage&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;installation with nvm&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;Clone the repository&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone https://github.com/edgeIO/dashboard.git
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Install the dependencies:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;npm install
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;running-the-okakestra-framework&#34;&gt;Running the Okakestra Framework&lt;/h2&gt;
&lt;p&gt;To be able to log in to the dashboard and test all functions, at least the System Manager and MongoDB must be started.
How to start them is described in the README of the &lt;code&gt;edgeio&lt;/code&gt; repository.&lt;/p&gt;
&lt;h2 id=&#34;serving-dashboard-for-development&#34;&gt;Serving Dashboard for Development&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;npm start
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;In the background, &lt;code&gt;npm start&lt;/code&gt; starts the &lt;code&gt;angular&lt;/code&gt; development server. By default, the server starts on &lt;code&gt;localhost:4200&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Once the angular server starts, it takes some time to pre-compile all assets before serving them. By default, the angular development server watches for file changes and will update accordingly.&lt;/p&gt;
&lt;p&gt;As stated in the &lt;a class=&#34;link&#34; href=&#34;https://angular.io/guide/i18n#generate-app-versions-for-each-locale&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Angular documentation&lt;/a&gt;, i18n does not work in the development mode.
Follow &lt;a class=&#34;link&#34; href=&#34;#building-dashboard-for-production&#34; &gt;Building Dashboard for Production&lt;/a&gt; section to test this feature.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Due to the deployment complexities of i18n and the need to minimize rebuild time, the development server only supports localizing a single locale at a time. Setting the &amp;ldquo;localize&amp;rdquo; option to true will cause an error when using ng serve if more than one locale is defined. Setting the option to a specific locale, such as &amp;ldquo;localize&amp;rdquo;: [&amp;ldquo;fr&amp;rdquo;], can work if you want to develop against a specific locale (such as fr).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;building-dashboard-for-production&#34;&gt;Building Dashboard for Production&lt;/h2&gt;
&lt;p&gt;In the production environment you need the following files:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;dist&lt;/code&gt; folder&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker&lt;/code&gt; folder&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Dockerfile&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker-compose.yml&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;1-dist-folder&#34;&gt;1. dist folder:&lt;/h3&gt;
&lt;p&gt;The dashboard project can be built for production by using the following task:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;npm run build
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;The code is compiled, compressed, i18n support is enabled and debug support removed. The dashboard binary can be found in the &lt;code&gt;dist&lt;/code&gt; folder.&lt;/p&gt;
&lt;h3 id=&#34;2-docker-folder&#34;&gt;2. docker folder:&lt;/h3&gt;
&lt;p&gt;To use the environment variables of a Docker container in your Angular application we use the library &lt;a class=&#34;link&#34; href=&#34;https://www.npmjs.com/package/angular-server-side-configuration&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;angular-server-side-configuration&lt;/a&gt;. For any problems you can consult the readme of that repository.&lt;/p&gt;
&lt;p&gt;This folder contains the angular-environment folder, the entrypoint.sh file and a Nginx configuration file.&lt;/p&gt;
&lt;p&gt;In the angular-environment folder is the code that needs to run every time you start your Docker container.
It contains a package.json file that has a dependency on angular-server-side-configuration and runs the main.js file.&lt;/p&gt;
&lt;p&gt;The entrypoint.sh script is used to install NodeJS and the angular-server-side-configuration library. After that, it runs the main.js script to set the environment variables and at the end, all NodeJS-related stuff is deleted and the Nginx server can be started with the defined settings in the configuration file.&lt;/p&gt;
&lt;h3 id=&#34;3-dockerfile&#34;&gt;3. dockerfile&lt;/h3&gt;
&lt;p&gt;Copies all relevant files into the container and executes the &lt;code&gt;entrypoint.sh&lt;/code&gt; script&lt;/p&gt;
&lt;h3 id=&#34;4-docker-compose&#34;&gt;4. docker compose&lt;/h3&gt;
&lt;p&gt;To start the Docker service the Ip address of the system manager should be defined in the &lt;code&gt;docker-compose.yml&lt;/code&gt; file. If the dashboard cannot reach the system manager, the user cannot log in.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;API_ADDRESS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;IP:PORT &lt;span class=&#34;c1&#34;&gt;#ip and port of the system manager&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;starting-the-dashboard&#34;&gt;Starting the dashboard&lt;/h2&gt;
&lt;p&gt;If you have all the above files, you can build and start the Dashboard using the following command.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker-compose.yml up –build -d
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
        </item>
        <item>
        <title>High level architecture</title>
        <link>https://oakestra.io/docs/oakestra/architecture/</link>
        <pubDate>Tue, 09 Aug 2022 15:56:27 +0200</pubDate>
        
        <guid>https://oakestra.io/docs/oakestra/architecture/</guid>
        <description>&lt;p&gt;&lt;img src=&#34;https://oakestra.io/oakestra/wiki-banner-help.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h1 id=&#34;table-of-content&#34;&gt;Table of content&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#root-orchestrator&#34; &gt;Root Orchestrator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#cluster-orchestrator&#34; &gt;Cluster Orchestrator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#worker-node&#34; &gt;Worker Node&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;oakestra-detailed-architecture&#34;&gt;Oakestra Detailed Architecture&lt;/h1&gt;
&lt;p&gt;As shown in our &lt;a class=&#34;link&#34; href=&#34;get-started.md&#34; &gt;Get Started&lt;/a&gt; guide, Oakestra uses 3-4 building blocks to operate.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Root Orchestrator&lt;/li&gt;
&lt;li&gt;Cluster Orchestrator&lt;/li&gt;
&lt;li&gt;Node Engine&lt;/li&gt;
&lt;li&gt;NetManager (optional)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This section of the wiki is intended for people willing to contribute to the project and it is meant to describe some internal architectural details.&lt;/p&gt;
&lt;h2 id=&#34;root-orchestrator&#34;&gt;Root Orchestrator&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://oakestra.io/oakestra/RootArch.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;The Root Orchestrator is a centralized control plane that is aware of the participating clusters.&lt;/p&gt;
&lt;p&gt;This picture describes the containers that compose the Root Orchestrator. As you may have seen we use docker-compose to bring up the orchestrators. This is because each block of this picture is &lt;em&gt;currently&lt;/em&gt; a separated container.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The System Manager is the point of contact for users, developers, or operators to use the system as an application deployment platform. It exposes APIs to receive deployment commands from users (application management) and APIs to handle slave Cluster Orchestrators. Cluster Orchestrators send their information
regularly, and the System Manager is aware of those clusters.&lt;/li&gt;
&lt;li&gt;The scheduler calculates a placement for a given application within the available clusters.&lt;/li&gt;
&lt;li&gt;Mongo is the interface we use to access the database. We store aggregated information about the participating clusters. We differentiate between static metadata and dynamic data. The former covers the IP address, port number, name, and location of each cluster. The latter can be data that is
changing regularly, such as the number of worker nodes per cluster, total amount of CPU cores and memory size, total amount of disk space, GPU capabilities, etc.&lt;/li&gt;
&lt;li&gt;The Root Network Components are detailed in the Oakestra-Net Wiki.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;system-manager-apis&#34;&gt;System Manager APIs&lt;/h3&gt;
&lt;p&gt;TODO&lt;/p&gt;
&lt;h3 id=&#34;jobs-db-structure&#34;&gt;Jobs DB Structure&lt;/h3&gt;
&lt;p&gt;TODO&lt;/p&gt;
&lt;h3 id=&#34;clusters-db-structure&#34;&gt;Clusters DB Structure&lt;/h3&gt;
&lt;p&gt;TODO&lt;/p&gt;
&lt;h3 id=&#34;scheduler-algorithms&#34;&gt;Scheduler Algorithms&lt;/h3&gt;
&lt;p&gt;TODO&lt;/p&gt;
&lt;h3 id=&#34;consideration-regarding-failure-and-scalability&#34;&gt;Consideration regarding failure and scalability:&lt;/h3&gt;
&lt;p&gt;The main problem of a centralized control plane is that it can act as a single point of failure. By design without a Root Orchestrator, the clusters are able to satisfy the SLA for the deployed applications internally, the only affected functionalities are the deployment of new services and the intra-cluster migrations. To avoid failure and increase resiliency an idea is to make the component able to scale by introducing a load balancer in front of the replicated components. However, this feature is not implemented yet.&lt;/p&gt;
&lt;h2 id=&#34;cluster-orchestrator&#34;&gt;Cluster Orchestrator&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://oakestra.io/oakestra/ClusterArch.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;TODO&lt;/p&gt;
&lt;h3 id=&#34;cluster-manager-apis&#34;&gt;Cluster Manager APIs&lt;/h3&gt;
&lt;p&gt;TODO&lt;/p&gt;
&lt;h3 id=&#34;mqtt-topics&#34;&gt;MQTT Topics&lt;/h3&gt;
&lt;p&gt;TODO&lt;/p&gt;
&lt;h3 id=&#34;jobs-db-structure-1&#34;&gt;Jobs DB structure&lt;/h3&gt;
&lt;p&gt;TODO&lt;/p&gt;
&lt;h3 id=&#34;nodes-db-structure&#34;&gt;Nodes DB structure&lt;/h3&gt;
&lt;p&gt;TODO&lt;/p&gt;
&lt;h3 id=&#34;schedulers-algorithms&#34;&gt;Schedulers Algorithms&lt;/h3&gt;
&lt;p&gt;TODO&lt;/p&gt;
&lt;h2 id=&#34;worker-node&#34;&gt;Worker Node&lt;/h2&gt;
&lt;p&gt;TODO&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Motivations</title>
        <link>https://oakestra.io/docs/oakestra/motivations/</link>
        <pubDate>Tue, 09 Aug 2022 15:56:27 +0200</pubDate>
        
        <guid>https://oakestra.io/docs/oakestra/motivations/</guid>
        <description>&lt;h1 id=&#34;motivations&#34;&gt;Motivations&lt;/h1&gt;
</description>
        </item>
        <item>
        <title>Node Engine</title>
        <link>https://oakestra.io/docs/oakestra/node-engine/</link>
        <pubDate>Tue, 09 Aug 2022 15:56:27 +0200</pubDate>
        
        <guid>https://oakestra.io/docs/oakestra/node-engine/</guid>
        <description></description>
        </item>
        <item>
        <title>Oakestra mesh network</title>
        <link>https://oakestra.io/docs/networking/oakestra-mesh/</link>
        <pubDate>Tue, 09 Aug 2022 15:56:27 +0200</pubDate>
        
        <guid>https://oakestra.io/docs/networking/oakestra-mesh/</guid>
        <description>&lt;p&gt;#Docs coming soon, stay tuned&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Orchestration</title>
        <link>https://oakestra.io/docs/oakestra/orchestrators/</link>
        <pubDate>Tue, 09 Aug 2022 15:56:27 +0200</pubDate>
        
        <guid>https://oakestra.io/docs/oakestra/orchestrators/</guid>
        <description>&lt;p&gt;#APIs&lt;/p&gt;
&lt;p&gt;Root Orchestrator APIs &lt;a class=&#34;link&#34; href=&#34;https://app.swaggerhub.com/apis-docs/giobarty/oakestra-root_api/v1#/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;OpenApi Spec&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Task Scheduling</title>
        <link>https://oakestra.io/docs/oakestra/scheduling/</link>
        <pubDate>Tue, 09 Aug 2022 15:56:27 +0200</pubDate>
        
        <guid>https://oakestra.io/docs/oakestra/scheduling/</guid>
        <description>&lt;h2 id=&#34;how-does-the-scheduling-work-in-oakestra&#34;&gt;How does the scheduling work in Oakestra?&lt;/h2&gt;
&lt;p&gt;Oakestra&amp;rsquo;s architecture is composed of two tiers. Resources are divided into clusters. A cluster is seen as the aggregation of all its resources. A job is first scheduled to a cluster, and then the cluster scheduler decides the target worker.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://oakestra.io/oakestra/cluster-worker-selection.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;scheduling algo&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;The scheduling component is as simple as a Celery worker. The scheduler receives a job description and gives back an allocation target. We differentiate between the Root scheduler and Cluster scheduler. The Root scheduler finds a suitable cluster (step 1), and the Cluster scheduler finds a suitable worker node (step 2).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://oakestra.io/oakestra/scheduling-celery-worker.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;scheduling algo&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;This scheduling algorithm does not ensure an absolute optimal deployment but consistently reduces the search space.&lt;/p&gt;
&lt;h2 id=&#34;scheduling-algorithm&#34;&gt;Scheduling Algorithm&lt;/h2&gt;
&lt;p&gt;At each layer, the scheduling decision consists of the creation of a &lt;code&gt;candidate_list&lt;/code&gt; of clusters (or workers), the exclusion of unsuitable candidates, and then the selection of the &amp;ldquo;best&amp;rdquo; candidate accordingly to a scheduling algorithm.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://oakestra.io/oakestra/scheduling-algo.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;scheduling algo&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;The scheduling algorithms are implemented in the &lt;code&gt;calculation.py&lt;/code&gt; component of each respective scheduler.&lt;/p&gt;
&lt;p&gt;The current released version only implements a &lt;strong&gt;best fit&lt;/strong&gt; and &lt;strong&gt;first fit&lt;/strong&gt; calculation strategies. However, on its way to the release, we have our new LDP algorithm (check it out on our &lt;a class=&#34;link&#34; href=&#34;https://arxiv.org/pdf/2207.01577.pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;whitepaper&lt;/a&gt;).&lt;/p&gt;
&lt;h2 id=&#34;job-constraints&#34;&gt;Job Constraints&lt;/h2&gt;
&lt;p&gt;The Job deployment descriptor allows a developer to specify constraints of 4 types: node &lt;strong&gt;resources&lt;/strong&gt;, &lt;strong&gt;network&lt;/strong&gt; capabilities, &lt;strong&gt;geographical&lt;/strong&gt; positioning, and &lt;strong&gt;direct&lt;/strong&gt; mapping.&lt;/p&gt;
&lt;h3 id=&#34;resources&#34;&gt;Resources&lt;/h3&gt;
&lt;p&gt;The job resource requirements cause the immediate exclusion of a candidate from the candidate list. These resources represent the bare minimum required by the job to operate properly. Here there is a table of the supported resources and the state of development:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Resource type&lt;/th&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Comments&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Virtualization&lt;/td&gt;
&lt;td&gt;🟢&lt;/td&gt;
&lt;td&gt;Fully functional containers support. Unikernel support is under development.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CPU&lt;/td&gt;
&lt;td&gt;🟢&lt;/td&gt;
&lt;td&gt;Only number of CPU cores&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Memory&lt;/td&gt;
&lt;td&gt;🟢&lt;/td&gt;
&lt;td&gt;Memory requirements in MB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Storage&lt;/td&gt;
&lt;td&gt;🟠&lt;/td&gt;
&lt;td&gt;It is possible to specify it, but it is not &lt;strong&gt;yet&lt;/strong&gt; taken into account by the scheduler&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GPU&lt;/td&gt;
&lt;td&gt;🟠&lt;/td&gt;
&lt;td&gt;Possibility of specifying the GPU cores. But not yet the available GPU drivers. Right now, the support is only for CUDA.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TPU&lt;/td&gt;
&lt;td&gt;🔴&lt;/td&gt;
&lt;td&gt;Not yet under development&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Architecture&lt;/td&gt;
&lt;td&gt;🔴&lt;/td&gt;
&lt;td&gt;Not yet possible to filter out the architecture. With containers, it is possible to use the multi-platform build. This flag is coming out together with the Unikernel support.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;network--geo-constraints&#34;&gt;Network &amp;amp; Geo constraints&lt;/h3&gt;
&lt;p&gt;The networking requirements selection and geographic constraints support are coming out in our next release &lt;strong&gt;v0.5&lt;/strong&gt; and are part of the LDP algorithm update. Stay tuned.&lt;/p&gt;
&lt;h3 id=&#34;direct-mapping-positioning&#34;&gt;Direct mapping positioning&lt;/h3&gt;
&lt;p&gt;It is possible to specify a &lt;strong&gt;direct mapping&lt;/strong&gt; constraint. Therefore, in the deployment description, a developer can specify a list of target clusters and nodes. The scheduling algorithm operates only on the active clusters (or nodes) among the given list.&lt;/p&gt;
&lt;p&gt;This direct mapping approach is currently based on &lt;code&gt;cluster names&lt;/code&gt; and &lt;code&gt;worker hostnames&lt;/code&gt;. We are anyway considering adding a label-based positioning where it is possible to tag resources with custom-defined labels. Stay tuned for more.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Welcome to Oakestra</title>
        <link>https://oakestra.io/p/welcome/</link>
        <pubDate>Tue, 09 Aug 2022 15:56:27 +0200</pubDate>
        
        <guid>https://oakestra.io/p/welcome/</guid>
        <description>&lt;img src="https://oakestra.io/cover.png" alt="Featured image of post Welcome to Oakestra" /&gt;&lt;p&gt;Oakestra is a hierarchical, lightweight, flexible, and scalable orchestration framework for edge computing.&lt;/p&gt;
&lt;p&gt;Through its novel federated cluster management, delegated task scheduling, and semantic overlay networking, Oakestra can flexibly consolidate multiple infrastructure providers and support applications over dynamic variations at the edge.&lt;/p&gt;
&lt;p&gt;Our comprehensive evaluation against the stateof-the-art demonstrates the significant benefits of Oakestra as it achieves approximately 10× resource usage reduction and 10% application performance improvement.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Get Started with Oakestra</title>
        <link>https://oakestra.io/docs/getstarted/get-started/</link>
        <pubDate>Mon, 08 Aug 2022 15:56:27 +0200</pubDate>
        
        <guid>https://oakestra.io/docs/getstarted/get-started/</guid>
        <description>&lt;p&gt;&lt;img src=&#34;https://oakestra.io/wiki-banner-help.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h1 id=&#34;get-started-with-oakestra&#34;&gt;Get Started with Oakestra&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Table of content:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#high-level-architecture&#34; &gt;High-level archtecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#create-your-first-oakestra-cluster&#34; &gt;Create your first Oakestra cluster&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#deploy-your-first-applications&#34; &gt;Deploy your first applications&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;high-level-architecture&#34;&gt;High-level architecture&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://oakestra.io/getstarted/highLevelArch.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;High level architecture picture&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;Oakestra lets you deploy your workload on devices of any size. From a small RasperryPi to a cloud instance far away on GCP or AWS. The tree structure enables you to create multiple clusters of resources.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;strong&gt;Root Orchestrator&lt;/strong&gt; manages different clusters of resources. The root only sees aggregated cluster resources.&lt;/li&gt;
&lt;li&gt;The &lt;strong&gt;Cluster orchestrator&lt;/strong&gt; manages your worker nodes. This component collects the real-time resources and schedules your workloads to the perfect matching device.&lt;/li&gt;
&lt;li&gt;A &lt;strong&gt;Worker&lt;/strong&gt; is any device where a component called NodeEngine is installed. Each node can support multiple execution environments such as Containers (containerd runtime), MicroVM (containerd runtime), and Unikernels (mirageOS).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Disclaimer, currently, only containers are supported. Help is still needed for Unikernels and MicroVMs.&lt;/p&gt;
&lt;h2 id=&#34;create-your-first-oakestra-cluster&#34;&gt;Create your first Oakestra cluster&lt;/h2&gt;
&lt;p&gt;Let&amp;rsquo;s start simple with a single node deployment, where all the components are in the same device. Then, we will separate the components and use multiple devices until we&amp;rsquo;re able to create multiple clusters.&lt;/p&gt;
&lt;h3 id=&#34;requirements&#34;&gt;Requirements:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Linux (Workers only)&lt;/li&gt;
&lt;li&gt;Docker + Docker compose (Orchestrators only)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1-doc-1-device-one-cluster&#34;&gt;1-DOC (1 Device, One Cluster)&lt;/h3&gt;
&lt;p&gt;In this example, we will use a single device to deploy all the components. This is not recommended for production environments, but it is pretty cool for home environments and development.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://oakestra.io/getstarted/SingleNodeExample.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Deployment example with a single device&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;0)&lt;/strong&gt; First, let&amp;rsquo;s export the required environment variables&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;## Choose a unique name for your cluster
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;export CLUSTER_NAME=My_Awesome_Cluster
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;## Come up with a name for the current location
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;export CLUSTER_LOCATION=My_Awesome_Apartment
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;1)&lt;/strong&gt; now clone the repository and move into it using:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone https://github.com/oakestra/oakestra.git &amp;amp;&amp;amp; cd oakestra
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;2)&lt;/strong&gt; Run a local 1-DOC cluster&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo -E docker-compose -f run-a-cluster/1-DOC.yml up
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;3)&lt;/strong&gt; download, untar and install the node engine package&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wget -c https://github.com/oakestra/oakestra/releases/download/v0.4.2/NodeEngine_$(dpkg --print-architecture).tar.gz &amp;amp;&amp;amp; tar -xzf NodeEngine_$(dpkg --print-architecture).tar.gz &amp;amp;&amp;amp; chmod +x install.sh &amp;amp;&amp;amp; ./install.sh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;4)&lt;/strong&gt; (optional) download and unzip and install the network manager; this enables an overlay network across your services&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wget -c https://github.com/oakestra/oakestra-net/releases/download/v0.4.2/NetManager_$(dpkg --print-architecture).tar.gz &amp;amp;&amp;amp; tar -xzf NetManager_$(dpkg --print-architecture).tar.gz &amp;amp;&amp;amp; chmod +x install.sh &amp;amp;&amp;amp; ./install.sh $(dpkg --print-architecture)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;( please replace &amp;lt; arch &amp;gt; with your device architecture: &lt;strong&gt;arm-7&lt;/strong&gt; or &lt;strong&gt;amd64&lt;/strong&gt; )&lt;/p&gt;
&lt;p&gt;4.1) Edit &lt;code&gt;/etc/netmanager/netcfg.json&lt;/code&gt; as follows:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;NodePublicAddress&amp;#34;: &amp;#34;&amp;lt;IP ADDRESS OF THIS DEVICE&amp;gt;&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;NodePublicPort&amp;#34;: &amp;#34;&amp;lt;PORT REACHABLE FROM OUTSIDE, use 50103 as default&amp;gt;&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;ClusterUrl&amp;#34;: &amp;#34;localhost&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;ClusterMqttPort&amp;#34;: &amp;#34;10003&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;4.2) start the NetManager on port 6000&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo NetManager -p 6000 &amp;amp;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;5)&lt;/strong&gt; start the NodeEngine. Please only use the &lt;code&gt;-n 6000&lt;/code&gt; parameter if you started the network component in step 4. This parameter, in fact, is used to specify the internal port of the network component, if any.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo NodeEngine -n 6000 -p 10100
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;( you can use &lt;code&gt;NodeEngine -h&lt;/code&gt; for further details )&lt;/p&gt;
&lt;h3 id=&#34;m-doc-m-devices-one-cluster&#34;&gt;M-DOC (M Devices, One Cluster)&lt;/h3&gt;
&lt;p&gt;The M-DOC deployment enables you to deploy One cluster with multiple worker nodes. The main difference between this deployment and 1-DOC is that the worker nodes might be external here, and there can be multiple of them.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://oakestra.io/getstarted/1ClusterExample.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;The deployment of this kind of cluster is similar to 1-DOC. We first need to start the root and cluster orchestrator. Afterward, we can attach the worker nodes.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1)&lt;/strong&gt; On the node you wish to use as a cluster and root orchestrator, execute steps &lt;strong&gt;1-DOC.1&lt;/strong&gt; and &lt;strong&gt;1-DOC.2&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2)&lt;/strong&gt; Now, we need to prepare all the worker nodes. On each worker node, execute the following:&lt;/p&gt;
&lt;p&gt;2.1) Downlaod and unpack both the NodeEngine and the NetManager:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wget -c https://github.com/oakestra/oakestra/releases/download/v0.4.2/NodeEngine_$(dpkg --print-architecture).tar.gz &amp;amp;&amp;amp; tar -xzf NodeEngine_$(dpkg --print-architecture).tar.gz &amp;amp;&amp;amp; chmod +x install.sh &amp;amp;&amp;amp; ./install.sh
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wget -c https://github.com/oakestra/oakestra-net/releases/download/v0.4.2/NetManager_$(dpkg --print-architecture).tar.gz &amp;amp;&amp;amp; tar -xzf NetManager_$(dpkg --print-architecture).tar.gz &amp;amp;&amp;amp; chmod +x install.sh &amp;amp;&amp;amp; ./install.sh $(dpkg --print-architecture)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;2.2) Edit &lt;code&gt;/etc/netmanager/netcfg.json&lt;/code&gt; accordingly:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;NodePublicAddress&amp;#34;: &amp;#34;&amp;lt;IP ADDRESS OF THIS DEVICE&amp;gt;&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;NodePublicPort&amp;#34;: &amp;#34;&amp;lt;PORT REACHABLE FROM OUTSIDE, use 50103 as default&amp;gt;&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;ClusterUrl&amp;#34;: &amp;#34;&amp;lt;IP ADDRESS OF THE CLSUTER ORCHESTRATOR&amp;gt;&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;ClusterMqttPort&amp;#34;: &amp;#34;10003&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;2.3) Run the NetManager and the NodeEngine components:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo NetManager -p 6000 &amp;amp;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo NodeEngine -n 6000 -p 10100 -a &amp;lt;IP ADDRESS OF THE CLSUTER ORCHESTRATOR&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;mdnc-m-devices-n-clusters&#34;&gt;MDNC (M Devices, N Clusters)&lt;/h3&gt;
&lt;p&gt;This represents the most versatile deployment. You can split your resources into multiple clusters within different locations and with different resources. In this deployment, we need to deploy the Root and the Cluster orchestrator on different nodes. Each independent clsuter orchestrator represents a cluster of resources. The worker nodes attached to each cluster are aggregated and seen as a unique big resource from the point of view of the Root. This deployment isolates the resources from the root perspective and delegates the responsibility to the cluster orchestrator.
&lt;img src=&#34;https://oakestra.io/getstarted/2ClusterExample.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1)&lt;/strong&gt; In this first step, we need to deploy the RootOrchestrator component on a Node. To do this, you need to clone the repository on the desired node, move to the root orchestrator folder, and execute the startup command.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone https://github.com/edgeIO/edgeio.git &amp;amp;&amp;amp; cd edgeio
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo -E docker-compose -f root_orchestrator/docker-compose-&amp;lt;arch&amp;gt;.yml up
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;( please replace &amp;lt; arch &amp;gt; with your device architecture: &lt;strong&gt;arm&lt;/strong&gt; or &lt;strong&gt;amd64&lt;/strong&gt; )&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2)&lt;/strong&gt; For each node that needs to host a cluster orchestrator, you need to:
2.1) Export the ENV variables needed to connect to the cluster orchestrator:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;export SYSTEM_MANAGER_URL=&amp;lt;IP ADDRESS OF THE NODE HOSTING THE ROOT ORCHESTRATOR&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;export CLUSTER_NAME=&amp;lt;choose a name for your cluster&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;export CLUSTER_LOCATION=&amp;lt;choose a name for the cluster&amp;#39;s location&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;2.2) Clone the repo and run the cluster orchestrator:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone https://github.com/edgeIO/edgeio.git &amp;amp;&amp;amp; cd edgeio
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo -E docker-compose -f cluster_orchestrator/docker-compose-&amp;lt;arch&amp;gt;.yml up
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;( please replace &amp;lt; arch &amp;gt; with your device architecture: &lt;strong&gt;arm&lt;/strong&gt; or &lt;strong&gt;amd64&lt;/strong&gt; )&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3)&lt;/strong&gt; Start and configure each worker as described in M-DOC.2&lt;/p&gt;
&lt;h3 id=&#34;hybrids&#34;&gt;Hybrids&lt;/h3&gt;
&lt;p&gt;You should have got the gist now, but if you want, you can build the infrastructure by composing the components like LEGO blocks.
Do you want to give your Cluster Orchestrator computational capabilities for the deployment? Deploy there the NodeEngine+Netmanager components, and you&amp;rsquo;re done. You don&amp;rsquo;t want to use a separate node for the Root Orchestrator? Simply deploy it all together with a cluster orchestrator.&lt;/p&gt;
&lt;h2 id=&#34;deploy-your-first-application&#34;&gt;Deploy your first application&lt;/h2&gt;
&lt;p&gt;Let&amp;rsquo;s try deploying an Nginx server and a client. Then we&amp;rsquo;ll enter inside the client container and try to curl Nginx.&lt;/p&gt;
&lt;p&gt;All we need to do to deploy an application is to create a deployment descriptor and submit it to the platform using the APIs.&lt;/p&gt;
&lt;h3 id=&#34;deployment-descriptor&#34;&gt;Deployment descriptor&lt;/h3&gt;
&lt;p&gt;In order to deploy a container a deployment descriptor must be passed to the deployment command.
The deployment descriptor contains all the information that Oakestra needs in order to achieve a complete
deploy in the system.&lt;/p&gt;
&lt;p&gt;Since version 0.4, Oakestra (previously, EdgeIO) uses the following deployment descriptor format.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;deploy_curl_application.yaml&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;53
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;sla_version&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;v2.0&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;customerID&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Admin&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;applications&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;{&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;applicationID&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;application_name&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;clientsrvr&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;application_namespace&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;application_desc&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Simple demo with curl client and Nginx server&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;microservices&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;{&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#34;microserviceID&amp;#34;: &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#34;microservice_name&amp;#34;: &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;curl&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#34;microservice_namespace&amp;#34;: &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#34;virtualization&amp;#34;: &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;container&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#34;cmd&amp;#34;: &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;sh&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;-c&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;tail -f /dev/null&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#34;memory&amp;#34;: &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#34;vcpus&amp;#34;: &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#34;vgpus&amp;#34;: &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#34;vtpus&amp;#34;: &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#34;bandwidth_in&amp;#34;: &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#34;bandwidth_out&amp;#34;: &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#34;storage&amp;#34;: &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#34;code&amp;#34;: &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;docker.io/curlimages/curl:7.82.0&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#34;state&amp;#34;: &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#34;port&amp;#34;: &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;9080&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#34;added_files&amp;#34;: &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;}&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;{&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#34;microserviceID&amp;#34;: &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#34;microservice_name&amp;#34;: &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;nginx&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#34;microservice_namespace&amp;#34;: &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#34;virtualization&amp;#34;: &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;container&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#34;cmd&amp;#34;: &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[],&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#34;memory&amp;#34;: &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#34;vcpus&amp;#34;: &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#34;vgpus&amp;#34;: &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#34;vtpus&amp;#34;: &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#34;bandwidth_in&amp;#34;: &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#34;bandwidth_out&amp;#34;: &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#34;storage&amp;#34;: &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#34;code&amp;#34;: &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;docker.io/library/nginx:latest&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#34;state&amp;#34;: &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#34;port&amp;#34;: &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;6080:60/tcp&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#34;addresses&amp;#34;: &lt;/span&gt;{&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#34;rr_ip&amp;#34;: &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;10.30.30.30&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;}&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#34;added_files&amp;#34;: &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;}&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;}&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;}&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;This deployment descriptor example generates one application named &lt;em&gt;clientserver&lt;/em&gt; with the &lt;code&gt;test&lt;/code&gt; namespace and two microservices:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;nginx server with test namespace, namely &lt;code&gt;clientserver.test.nginx.test&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;curl client with test namespace, namely &lt;code&gt;clientserver.test.curl.test&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is a detailed description of the deployment descriptor fields currently implemented:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;sla_version: the current version is v0.2&lt;/li&gt;
&lt;li&gt;customerID: id of the user, default is Admin
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;application list, in a single deployment descriptor is possible to define multiple applications, each containing:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fully qualified app name: A fully qualified name in Oakestra is composed of
&lt;ul&gt;
&lt;li&gt;application_name: unique name representing the application (max 10 char, no symbols)&lt;/li&gt;
&lt;li&gt;application_namespace: namespace of the app, used to reference different deployment of the same application. Examples of namespace name can be &lt;code&gt;default&lt;/code&gt; or &lt;code&gt;production&lt;/code&gt; or &lt;code&gt;test&lt;/code&gt; (max 10 char, no symbols)&lt;/li&gt;
&lt;li&gt;applicationID: leave it empty for new deployments, this is needed only to edit an existing deployment.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;application_desc: Short description of the application&lt;/li&gt;
&lt;li&gt;microservice list, a list of the microservices composing the application. For each microservice the user can specify:
&lt;ul&gt;
&lt;li&gt;microserviceID: leave it empty for new deployments, this is needed only to edit an existing deployment.&lt;/li&gt;
&lt;li&gt;Fully qualified service name:
&lt;ul&gt;
&lt;li&gt;microservice_name: name of the service (max 10 char, no symbols)&lt;/li&gt;
&lt;li&gt;microservice_namespace: namespace of the service, used to reference different deployment of the same service. Examples of namespace name can be &lt;code&gt;default&lt;/code&gt; or &lt;code&gt;production&lt;/code&gt; or &lt;code&gt;test&lt;/code&gt; (max 10 char, no symbols)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;virtualization: currently the only uspported virtualization is &lt;code&gt;container&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;cmd: list of the commands to be executed inside the container at startup&lt;/li&gt;
&lt;li&gt;vcpu,vgpu,memory: minimum cpu/gpu vcores and memory amount needed to run the container&lt;/li&gt;
&lt;li&gt;vtpus: currently not implemented&lt;/li&gt;
&lt;li&gt;storage: minimum storage size required (currently the scheduler does not take this value into account)&lt;/li&gt;
&lt;li&gt;bandwidth_in/out: minimum required bandwith on the worker node. (currently the scheduler does not take this value into account)&lt;/li&gt;
&lt;li&gt;port: port mapping for the container in the syntax hostport_1:containerport_1[/protocol];hostport_2:containerport_2[/protocol] (default protocol is tcp)&lt;/li&gt;
&lt;li&gt;addresses: allows to specify a custom ip address to be used to balance the traffic across all the service instances.
&lt;ul&gt;
&lt;li&gt;rr_ip: [optional filed] This field allows you to setup a custom Round Robin network address to reference all the instances belonging to this service. This address is going to be permanently bounded to the service. The address MUST be in the form &lt;code&gt;10.30.x.y&lt;/code&gt; and must not collide with any other Instance Address or Service IP in the system, otherwise an error will be returned. If you don&amp;rsquo;t specify a RR_ip and you don&amp;rsquo;t set this field, a new address will be generated by the system.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;constraints: array of constraints regarding the service.
&lt;ul&gt;
&lt;li&gt;type: constraint type
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;direct&lt;/code&gt;: Send a deployment to a specific cluster and a specific list of eligible nodes. You can specify &lt;code&gt;&amp;quot;node&amp;quot;:&amp;quot;node1;node2;...;noden&amp;quot;&lt;/code&gt; a list of node&amp;rsquo;s hostnames. These are the only eligible worker nodes.  &lt;code&gt;&amp;quot;cluster&amp;quot;:&amp;quot;cluster_name&amp;quot;&lt;/code&gt; The name of the cluster where this service must be scheduled. E.g.:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;#34;constraints&amp;#34;:[
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &amp;#34;type&amp;#34;:&amp;#34;direct&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &amp;#34;node&amp;#34;:&amp;#34;xavier1&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &amp;#34;cluster&amp;#34;:&amp;#34;gpu&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          ]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;login-to-the-apis&#34;&gt;Login to the APIs&lt;/h3&gt;
&lt;p&gt;After running a cluster you can use the debug OpenAPI page to interact with the apis and use the infrastructure&lt;/p&gt;
&lt;p&gt;connect to &lt;code&gt;&amp;lt;root_orch_ip&amp;gt;:10000/api/docs&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Authenticate using the following procedure:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;locate the login method and use the try-out button
&lt;img src=&#34;https://oakestra.io/getstarted/login-try.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;try-login&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;Use the default Admin credentials to login
&lt;img src=&#34;https://oakestra.io/getstarted/login-execute.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;execute-login&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;Copy the result login token
&lt;img src=&#34;https://oakestra.io/getstarted/login-token-copy.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;token-login&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;Go to the top of the page and authenticate with this token
&lt;img src=&#34;https://oakestra.io/getstarted/authorize.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;auth-login&#34;
	
	
&gt;
&lt;img src=&#34;https://oakestra.io/getstarted/authorize-2.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;auth2-login&#34;
	
	
&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;register-an-application-and-the-services&#34;&gt;Register an application and the services&lt;/h3&gt;
&lt;p&gt;After you authenticate with the login function, you can try out to deploy the first application.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Upload the deployment description to the system. You can try using the deployment descriptor above.
&lt;img src=&#34;https://oakestra.io/getstarted/post-app.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;post app&#34;
	
	
&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The response contains the Application id and the id for all the application&amp;rsquo;s services. Now the application and the services are registered to the platform. It&amp;rsquo;s time to deploy the service instances!&lt;/p&gt;
&lt;p&gt;You can always remove or create a new service for the application using the /api/services endpoints&lt;/p&gt;
&lt;h3 id=&#34;deploy-an-instance-of-a-registered-service&#34;&gt;Deploy an instance of a registered service&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Trigger a deployment of a service&amp;rsquo;s instance using &lt;code&gt;POST /api/service/{serviceid}/instance&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;each call to this endpoint generates a new instance of the service&lt;/p&gt;
&lt;h3 id=&#34;monitor-the-service-status&#34;&gt;Monitor the service status&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;With &lt;code&gt;GET /api/aplications/&amp;lt;userid&amp;gt;&lt;/code&gt; (or simply /api/aplications/ if you&amp;rsquo;re admin) you can check the list of the deployed application.&lt;/li&gt;
&lt;li&gt;With &lt;code&gt;GET /api/services/&amp;lt;appid&amp;gt;&lt;/code&gt; you can check the services attached to an application&lt;/li&gt;
&lt;li&gt;With &lt;code&gt;GET /api/service/&amp;lt;serviceid&amp;gt;&lt;/code&gt; you can check the status for all the instances of &lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;undeploy&#34;&gt;Undeploy&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;code&gt;DELETE /api/service/&amp;lt;serviceid&amp;gt;&lt;/code&gt; to delete all the instances of a service&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;DELETE /api/service/&amp;lt;serviceid&amp;gt;/instance/&amp;lt;instance number&amp;gt;&lt;/code&gt; to delete a specific instance of a service&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;DELETE /api/application/&amp;lt;appid&amp;gt;&lt;/code&gt; to delete all together an application with all the services and instances&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;check-if-the-deployment-succeded&#34;&gt;Check if the deployment succeded&lt;/h3&gt;
&lt;p&gt;If both services show the status &lt;strong&gt;ACTIVE&lt;/strong&gt; then everything went fine. Otherwise, there might be a configuration issue or a bug. Please debug it with &lt;code&gt;docker logs system_manager -f --tail=100&lt;/code&gt; on the root orchestrator and with &lt;code&gt;docker logs cluster_manager -f --tail=100&lt;/code&gt; on the cluster orchestrator and open an issue.&lt;/p&gt;
&lt;p&gt;If both services are ACTIVE, it is time to test the communication.&lt;/p&gt;
&lt;p&gt;Move into the worker node hosting the client and use the following command to log into the container.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo ctr -n edge.io task exec --exec-id term1 Client.default.client.default /bin/sh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Once we are inside our client, we can curl the Nginx server and check if everything works.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;curl 10.30.30.30
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Note that this address is the one we specified in the Nginx&amp;rsquo;s deployment descriptor.&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
